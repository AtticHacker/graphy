
10-| @@@                 @@@                                                         @@@ @@@ @@@                 @@@ |
---| @@@                 @@@                                                         @@@ @@@ @@@                 @@@ |
8--| @@@             @@@ @@@                                                         @@@ @@@ @@@                 @@@ |
---| @@@ @@@         @@@ @@@                                                 @@@ @@@ @@@ @@@ @@@ @@@ @@@         @@@ |
6--| @@@ @@@         @@@ @@@                                                 @@@ @@@ @@@ @@@ @@@ @@@ @@@     @@@ @@@ |
---| @@@ @@@     @@@ @@@ @@@                                     @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@     @@@ @@@ |
4--| @@@ @@@ @@@ @@@ @@@ @@@                 @@@         @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@     @@@ @@@ |
---| @@@ @@@ @@@ @@@ @@@ @@@                 @@@ @@@     @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@     @@@ @@@ |
2--| @@@ @@@ @@@ @@@ @@@ @@@             @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ |
---| @@@ @@@ @@@ @@@ @@@ @@@         @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ |
0--| @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ @@@ |
-------------------------------------------------------------------------------------------------------------------- |
---|  04:00 | 04:15 | 04:30 | 04:45 | 05:00 | 05:15 | 05:30 | 05:45 | 06:00 | 06:15 | 06:30 | 06:45 | 07:00 | 07:15  |

(save-excursion
  (setq draw-list '())
  (beginning-of-buffer)
  (while (< (point) (point-max))
    (graphy--maybe-add-to-draw-list)
    (forward-char)))

(mapc (lambda (p)
        (overlay-put (make-overlay p (+ p 1)) 'face 'graphy-bar-face)) draw-list)


(overlay-put (make-overlay 1 2) 'face 'graphy-bar-face)
(defface graphy-bar-face
  '((t :background "#7700ff" :foreground "#7700ff"))
  "" :group 'graphy)

(defun graphy--maybe-add-to-draw-list ()
  (if (equal (char-at-point (point)) "@") (add-to-list 'draw-list (point))))

(defun assocv (key lat)
  (cdr (assoc key lat)))

(rassoc '"2015-06-0" '((date . "2015-06-09") (zzz . "2015-06-0")))
(assocv 'date '((date . "2015-06-09")))
(lookup-key 'date '((date . "2015-06-09")))
